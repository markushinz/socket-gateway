name: CI
on:
  pull_request:
  push:
    branches:
      - main
jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: pre-commit
        uses: markushinz/actions/pre-commit@v1.1.4
      - name: Set up Node.js
        uses: actions/setup-node@v3.8.1
        with:
          node-version: "18.2.0"
      - name: Workflow Mutex
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        uses: markushinz/actions/workflow-mutex@v1.1.4
      - name: Version
        uses: markushinz/actions/version@v1.1.4
        with:
          minimum_version_command: cat version.txt
      - name: Lint, Test, Build and Pack
        run: |
          npm version --git-tag-version=false "$VERSION"
          npm ci
          npm run lint
          npm run test
          npm run build
          npm pack
          mv "socket-gateway-${VERSION}.tgz" socket-gateway.tgz
      - name: SonarCloud Scan
        if: ${{ github.actor != 'dependabot[bot]' }}
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Docker - Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Docker - Set up Buildx
        uses: docker/setup-buildx-action@v2
      - name: Docker - Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Docker - Build and Push
        uses: docker/build-push-action@v4
        with:
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
          platforms: |
            linux/amd64
            linux/arm64
            linux/arm/v7
          tags: |
            ${{ github.repository }}:latest
            ${{ github.repository }}:v${{ env.VERSION }}
          cache-from: type=registry,ref=${{ github.repository }}:buildcache
          cache-to: type=registry,ref=${{ github.repository }}:buildcache,mode=max
      - name: Release
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        run: GITHUB_TOKEN="${{ secrets.GITHUB_TOKEN }}" gh release create "v${VERSION}" --generate-notes ./socket-gateway.tgz
      - name: Deploy
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        run: GITHUB_TOKEN="${{ secrets.TU_TOKEN }}" gh workflow run -R "${{ secrets.DEPLOY_REPO }}" cd -f "repository=${{ github.repository }}" -f "tag=v${VERSION}"
